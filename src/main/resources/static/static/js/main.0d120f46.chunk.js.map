{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","toDoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","console","log","addProjectTask","UpdateProjectTask","create_At","updateProjectTask","getProjectTask","patch","Landing","Register","username","fullName","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"yVAIaA,EAAgB,SAACC,EAASC,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAGtBC,IAAMC,KAAK,eAAgBL,GAHL,OAI5CC,EAAQK,KAAK,cACbJ,EAAS,CACRK,KCVkB,aDWlBC,QAAQ,KAPmC,gDAU1CN,EAAS,CACLK,KCfa,aDgBbC,QAAQ,KAAIC,SAASC,OAZiB,yDAAtB,uDEGvBC,E,2MACJC,cAAgB,SAAAC,GACd,EAAKC,MAAMC,cAAcF,I,wEAEjB,IACDb,EAAWgB,KAAKF,MAAhBd,QACP,OACE,yBAAKiB,UAAU,aACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,WAAWjB,EAAQkB,oBAErC,yBAAKD,UAAU,2BACb,4BAAKjB,EAAQmB,aACb,2BAAInB,EAAQoB,cAEd,yBAAKH,UAAU,8BACb,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMI,GAAE,wBAAmBrB,EAAQkB,oBACjC,wBAAID,UAAU,yBACZ,uBAAGA,UAAU,6BAAb,qBAGJ,kBAAC,IAAD,CAAMI,GAAE,yBAAoBrB,EAAQkB,oBAClC,wBAAID,UAAU,0BACZ,uBAAGA,UAAU,mBAAb,0BAIF,wBAAIA,UAAU,yBAAyBK,QAASN,KAAKJ,cAAcW,KAAKP,KAAKhB,EAAQkB,oBACnF,uBAAGD,UAAU,2BAAb,6B,GA/BMO,aA+CXC,cAAQ,KAAK,CAACV,cFVA,SAAAF,GAAE,8CAAI,WAAMX,GAAN,SAAAC,EAAA,0DAE3BuB,OAAOC,QACP,6EAH2B,gCAMrBvB,IAAMwB,OAAN,uBAA6Bf,IANR,OAO3BX,EAAS,CACTK,KCjDsB,iBDkDtBC,QAASK,IATkB,2CAAJ,wDEUhBY,CAA8Bd,GCzC9BkB,EAVa,WACxB,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAMT,GAAG,cAAcJ,UAAU,uBAAjC,sBCGNc,E,4LAGFf,KAAKF,MAAMkB,gB,+BAGJ,IAQAC,EAAYjB,KAAKF,MAAMd,QAAvBiC,SAEP,OAEE,yBAAKhB,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBAAd,YACA,6BACC,kBAAC,EAAD,MACD,6BACA,6BAECgB,EAASC,KAAI,SAAAlC,GAAO,OACnB,kBAAC,EAAD,CAAamC,IAAKnC,EAAQa,GAAIb,QAASA,e,GA7B/BwB,aAiDTC,eAJS,SAAAW,GAAK,MAAK,CAChCpC,QAAQoC,EAAMpC,WAGuB,CAACgC,YJrCb,yDAAM,WAAM9B,GAAN,eAAAC,EAAA,sEAEZC,IAAMiC,IAAI,oBAFE,OAExBC,EAFwB,OAG9BpC,EAAU,CACPK,KCxBsB,eDyBtBC,QAAS8B,EAAI5B,OALc,2CAAN,wDIqCZe,CAAuCM,GChDvCQ,EARK,SAAAC,GACdA,EACFpC,IAAMqC,SAASC,QAAQC,OAAvB,cAAiDH,SAE1CpC,IAAMqC,SAASC,QAAQC,OAAvB,e,iBCwCEC,EAAS,kBAAM,SAAA1C,GAC1B2C,aAAaC,WAAW,YACxBP,GAAY,GACZrC,EAAS,CACPK,KLvC4B,mBKwC5BC,QAAS,OC7CPuC,E,iLAEF/B,KAAKF,MAAM8B,SACXlB,OAAOsB,SAASC,KAAO,M,+BAEf,IAkDJC,EAlDG,EACsBlC,KAAKF,MAAMqC,SAAhCC,EADD,EACCA,WAAYC,EADb,EACaA,KAEdC,EACJ,yBAAKrC,UAAU,2BAA2BJ,GAAG,cAC3C,wBAAII,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,cAA9B,eAMJ,wBAAIJ,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,cAC5B,uBAAGJ,UAAU,4BACZoC,EAAKE,WAGV,wBAAItC,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,WACVI,GAAG,UACHC,QAASN,KAAK4B,OAAOrB,KAAKP,OAH5B,aAYFwC,EACJ,yBAAKvC,UAAU,2BAA2BJ,GAAG,cAC3C,wBAAII,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,aAA9B,YAIF,wBAAIJ,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,UAA9B,YAeR,OAJE6B,EADEE,GAAcC,EACFC,EAEAE,EAGd,yBAAKvC,UAAU,uDACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeI,GAAG,KAAlC,oCAGA,4BACEJ,UAAU,iBACVV,KAAK,SACLkD,cAAY,WACZC,cAAY,eAEZ,0BAAMzC,UAAU,yBAEjBiC,Q,GA5EU1B,aA4FNC,eAJS,SAAAW,GAAK,MAAK,CAChCe,SAAUf,EAAMe,YAKhB,CAAEP,UAFWnB,CAGbsB,G,yCC9FIY,E,YACJ,aAAe,IAAD,8BACZ,+CAEKvB,MAAQ,CACXjB,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbwC,WAAY,GACZC,SAAU,GACVC,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAASxC,KAAd,gBAChB,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAbJ,E,uFAiBY0C,GACpBA,EAAUH,QACT9C,KAAKkD,SAAS,CAACJ,OAAQG,EAAUH,W,+BAI/BK,GACPnD,KAAKkD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBACF,IAAMC,EAAa,CACjBrD,YAAaH,KAAKoB,MAAMjB,YACxBD,kBAAmBF,KAAKoB,MAAMlB,kBAC9BE,YAAaJ,KAAKoB,MAAMhB,YACxBwC,WAAY5C,KAAKoB,MAAMwB,WACvBC,SAAU7C,KAAKoB,MAAMyB,UAEvB7C,KAAKF,MAAMf,cAAcyE,EAAWxD,KAAKF,MAAMb,W,+BAKvC,IACD6D,EAAU9C,KAAKoB,MAAf0B,OACP,OACE,6BAYE,yBAAK7C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAM+C,SAAUhD,KAAKgD,UACnB,yBAAK/C,UAAU,cACb,2BACEV,KAAK,OAELU,UAAWwD,IAAW,+BAA+B,CAAC,aAAcX,EAAO3C,cAC3EuD,YAAY,eACZL,KAAK,cACLC,MAAOtD,KAAKoB,MAAMjB,YAClB4C,SAAU/C,KAAK+C,WAEhBD,EAAO3C,aACN,yBAAKF,UAAU,oBACX6C,EAAO3C,cAKf,yBAAKF,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAO5C,oBAEvBwD,YAAY,oBACZL,KAAK,oBACLC,MAAOtD,KAAKoB,MAAMlB,kBAClB6C,SAAU/C,KAAK+C,WAEfD,EAAO5C,mBACP,yBAAKD,UAAU,oBACX6C,EAAO5C,oBAIf,yBAAKD,UAAU,cACb,8BACEA,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAO1C,cAEvBsD,YAAY,sBACZL,KAAK,cACLC,MAAOtD,KAAKoB,MAAMhB,YAClB2C,SAAU/C,KAAK+C,WAEhBD,EAAO1C,aACN,yBAAKH,UAAU,oBACX6C,EAAO1C,cAIf,0CACA,yBAAKH,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVoD,KAAK,aACLC,MAAOtD,KAAKoB,MAAMwB,WAClBG,SAAU/C,KAAK+C,YAGnB,kDACA,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVoD,KAAK,WACLC,MAAOtD,KAAKoB,MAAMyB,SAClBE,SAAU/C,KAAK+C,YAInB,2BACExD,KAAK,SACLU,UAAU,6C,GAzILO,aAgKVC,eALS,SAAAW,GAAK,MAAK,CAC9B0B,OAAS1B,EAAM0B,UAIqB,CAAC/D,iBAA1B0B,CAA2CkC,G,gBCtKpDgB,EAAe,G,yjBCCrB,IAAMA,EAAe,CACjB1C,SAAW,GACXjC,QAAU,I,yjBCFd,IAAM2E,EAAe,CACjBC,cAAgB,GAChBC,aAAc,I,yjBCFlB,IAAMF,EAAe,CACnBvB,YAAY,EACZC,KAAM,IAGFyB,EAAuB,SAAAtE,GAC3B,QAAIA,GCFSuE,cAAgB,CAC3BjB,OJLW,WAAsC,IAA7B1B,EAA4B,uDAAtBuC,EAAcK,EAAQ,uCAClD,OAAOA,EAAOzE,MACV,IRJoB,aQKhB,OAAOyE,EAAOxE,QAClB,QACI,OAAO4B,IICbpC,QHDW,WAAsC,IAA7BoC,EAA4B,uDAAtBuC,EAAcK,EAAQ,uCAChD,OAAOA,EAAOzE,MACX,ITRqB,eSSjB,OAAO,EAAP,GACO6B,EADP,CAEIH,SAAS+C,EAAOxE,UAEvB,ITZmB,cSaf,OAAO,EAAP,GACO4B,EADP,CAEIpC,QAAQgF,EAAOxE,UAEvB,IThBsB,iBSiBlB,OAAO,EAAP,GACO4B,EADP,CAEIH,SAASG,EAAMH,SAASgD,QACpB,SAAAjF,GAAO,OAAIA,EAAQkB,oBAAsB8D,EAAOxE,aAG5D,QACO,OAAO4B,IGlBlB8C,QFFW,WAAqC,IAA5B9C,EAA2B,uDAArBuC,EAAaK,EAAQ,uCAC/C,OAAOA,EAAOzE,MACV,IVFmB,cUGf,OAAO,KACA6B,EADP,CAEIwC,cAAeI,EAAOxE,UAE9B,IVNwB,mBUOpB,OAAO,KACA4B,EADP,CAEIyC,aAAcG,EAAOxE,UAE7B,IVV2B,sBUWvB,OAAO,KACA4B,EADP,CAEIwC,cAAexC,EAAMwC,cAAcK,QACnC,SAAAJ,GAAY,OAAIA,EAAaM,kBAAoBH,EAAOxE,aAGhE,QACI,OAAO4B,IEjBfe,SDKW,WAAwC,IAA/Bf,EAA8B,uDAAtBuC,EAAcK,EAAQ,uCACpD,OAAQA,EAAOzE,MACb,IXN4B,mBWO1B,OAAO,KACF6B,EADL,CAEEgB,WAAY0B,EAAqBE,EAAOxE,SACxC6C,KAAM2B,EAAOxE,UAGjB,QACE,OAAO4B,MErBPuC,EAAe,GACfS,EAAa,CAACC,KAIdC,GACJ5D,OAAO6D,8BAAgC7D,OAAO6D,+BAsBjCC,GApBX9D,OAAO+D,UAAUC,UAAUC,SAAS,WAAaL,GACzCM,YACJC,EACAlB,EACAmB,YACIC,IAAe,WAAf,EAAmBX,GAGrBE,KAIEM,YACJC,EACAlB,EACAmB,YACIC,IAAe,WAAf,EAAmBX,KCrBzBY,G,YAEH,aAAe,IAAD,8BACZ,+CAEK5D,MAAM,CACTvB,GAAG,GACHM,YAAY,GACZD,kBAAkB,GAClBE,YAAY,GACZwC,WAAW,GACXC,SAAS,GACTC,OAAQ,IAEV,EAAKC,SAAS,EAAKA,SAASxC,KAAd,gBACd,EAAKyC,SAAS,EAAKA,SAASzC,KAAd,gBAbF,E,uFAiBW0C,GACpBA,EAAUH,QACZ9C,KAAKkD,SAAS,CAACJ,OAAOG,EAAUH,SAFC,MAW/BG,EAAUjE,QANZa,EALiC,EAKjCA,GACAM,EANiC,EAMjCA,YACAD,EAPiC,EAOjCA,kBACAE,EARiC,EAQjCA,YACAwC,EATiC,EASjCA,WACAC,EAViC,EAUjCA,SAGF7C,KAAKkD,SAAS,CACZrD,KACAM,cACAD,oBACAE,cACAwC,aACAC,e,0CAIkB,IACZhD,EAAMG,KAAKF,MAAMmF,MAAMC,OAAvBrF,GACPG,KAAKF,MAAMqF,WAAWtF,EAAIG,KAAKF,MAAMb,W,+BAG/BkE,GACPnD,KAAKkD,SAAL,eAAgBC,EAAEC,OAAOC,KAAMF,EAAEC,OAAOE,U,+BAGjCH,GACPA,EAAEI,iBAEF,IAAM6B,EAAc,CAClBvF,GAAGG,KAAKoB,MAAMvB,GACdM,YAAYH,KAAKoB,MAAMjB,YACvBD,kBAAkBF,KAAKoB,MAAMlB,kBAC7BE,YAAYJ,KAAKoB,MAAMhB,YACvBwC,WAAY5C,KAAKoB,MAAMwB,WACvBC,SAAU7C,KAAKoB,MAAMyB,UAGvB7C,KAAKF,MAAMf,cAAcqG,EAAcpF,KAAKF,MAAMb,W,+BAG1C,IACD6D,EAAU9C,KAAKoB,MAAf0B,OACP,OACE,yBAAK7C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAM+C,SAAUhD,KAAKgD,UACnB,yBAAK/C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWwD,IAAW,+BAAgC,CACpD,aAAaX,EAAO3C,cAEtBuD,YAAY,eACZL,KAAK,cACLC,MAAOtD,KAAKoB,MAAMjB,YAClB4C,SAAU/C,KAAK+C,WAEhBD,EAAO3C,aACN,yBAAKF,UAAU,oBAAoB6C,EAAO3C,cAG9C,yBAAKF,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVyD,YAAY,oBACZL,KAAK,oBACLC,MAAOtD,KAAKoB,MAAMlB,kBAClBmF,UAAQ,KAGZ,yBAAKpF,UAAU,cACb,8BACEA,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAO1C,cAEvBsD,YAAY,sBACZL,KAAK,cACLC,MAAOtD,KAAKoB,MAAMhB,YAClB2C,SAAU/C,KAAK+C,WAEhBD,EAAO1C,aACN,yBAAKH,UAAU,oBAAoB6C,EAAO1C,cAG9C,0CACA,yBAAKH,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVoD,KAAK,aACLC,MAAOtD,KAAKoB,MAAMwB,WAClBG,SAAU/C,KAAK+C,YAGnB,kDACA,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVoD,KAAK,WACLC,MAAOtD,KAAKoB,MAAMyB,SAClBE,SAAU/C,KAAK+C,YAInB,2BACExD,KAAK,SACLU,UAAU,4C,GA1IAO,aAiKbC,gBALS,SAAAW,GAAK,MAAK,CAC/BpC,QAAQoC,EAAMpC,QAAQA,QACtB8D,OAAO1B,EAAM0B,UAGuB,CAACqC,WfzId,SAACtF,EAAIZ,GAAL,8CAAiB,WAAMC,GAAN,eAAAC,EAAA,+EAGjBC,IAAMiC,IAAN,uBAA0BxB,IAHT,OAG7ByB,EAH6B,OAInCpC,EAAW,CACPK,KClCe,cDmCfC,QAAS8B,EAAI5B,OANkB,gDASnCT,EAAQK,KAAK,cATsB,yDAAjB,uDeyI0BP,iBAArC0B,CAAqDuE,IClK9DM,G,sLACUC,EAAYC,GACxBxF,KAAKF,MAAM2F,kBAAkBF,EAAYC,K,+BAEjC,IAEJE,EACAC,EAFI9B,EAAiB7D,KAAKF,MAAtB+D,aAmBR,OAf8B,IAA1BA,EAAa+B,WACfD,EAAgB,uBAChBD,EAAiB,QAGW,IAA1B7B,EAAa+B,WACfD,EAAgB,wBAChBD,EAAiB,UAGW,IAA1B7B,EAAa+B,WACfD,EAAgB,qBAChBD,EAAiB,OAIjB,yBAAKzF,UAAU,sBACb,yBAAKA,UAAS,mCAA8B0F,IAA5C,OACO9B,EAAaM,gBADpB,iBACmDuB,GAEnD,yBAAKzF,UAAU,sBACb,wBAAIA,UAAU,cAAc4D,EAAagC,SACzC,uBAAG5F,UAAU,4BACV4D,EAAaiC,oBAEhB,kBAAC,IAAD,CACEzF,GAAE,6BAAwBwD,EAAa3D,kBAArC,YACA2D,EAAaM,iBAEflE,UAAU,mBAJZ,iBASA,4BAAQA,UAAU,sBAAsBK,QAAUN,KAAKJ,cAAcW,KACnEP,KACA6D,EAAa3D,kBACb2D,EAAaM,kBAHf,iB,GA3CgB3D,aAwDXC,eAAQ,KAAM,CAACgF,kBCEG,SAACF,EAAYC,GAAb,8CAAuB,WAAMtG,GAAN,SAAAC,EAAA,0DAClDuB,OAAOC,QAAP,wCAAgD6E,EAAhD,oCADkD,gCAE9CpG,IAAMwB,OAAN,uBAA6B2E,EAA7B,YAA2CC,IAFG,OAGpDtG,EAAS,CACPK,KhB3D6B,sBgB4D7BC,QAASgG,IALyC,2CAAvB,wDDFlB/E,CAAoC6E,IEiBpCS,G,iLA/DP,IAZM,IAIAC,EAFuBhG,KAAKF,MAA3BmG,mBAEwB/E,KAAI,SAAA2C,GAAY,OAC7C,kBAAC,GAAD,CAAa1C,IAAK0C,EAAahE,GAAIgE,aAAcA,OAG/CqC,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAERC,EAAE,EAAGA,EAAEL,EAAMM,OAAQD,IAEgB,UAAvCL,EAAMK,GAAGvG,MAAM+D,aAAa0C,QAC9BL,EAAU5G,KAAK0G,EAAMK,IAEoB,gBAAvCL,EAAMK,GAAGvG,MAAM+D,aAAa0C,QAC9BJ,EAAgB7G,KAAK0G,EAAMK,IAEc,SAAvCL,EAAMK,GAAGvG,MAAM+D,aAAa0C,QAC9BH,EAAU9G,KAAK0G,EAAMK,IAKzB,OAIM,yBAAKpG,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,uCACb,uCAIHiG,GAMH,yBAAKjG,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qCACb,6CAOHkG,GAEH,yBAAKlG,UAAU,YACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qCACb,sCAOHmG,S,GApEC5F,aCIhBgG,G,YAEN,aAAe,IAAD,8BACZ,+CACKpF,MAAQ,CACX0B,OAAQ,IAHE,E,uFAOYG,GACpBA,EAAUH,QACZ9C,KAAKkD,SAAS,CAACJ,OAAQG,EAAUH,W,0CAIhB,IACVjD,EAAMG,KAAKF,MAAMmF,MAAMC,OAAvBrF,GACPG,KAAKF,MAAM2G,WAAW5G,K,+BAEd,IAKJ6G,EAJI7G,EAAOG,KAAKF,MAAMmF,MAAMC,OAAxBrF,GACD+D,EAAiB5D,KAAKF,MAAMoE,QAA5BN,cA8BP,OAHA8C,EAvBuB,SAAC5D,EAAOc,GAC7B,OAAIA,EAAc0C,OAAS,EAErBxD,EAAO6D,gBAET,yBAAK1G,UAAU,iCAAiC2G,KAAM,SAAS9D,EAAO6D,iBAE7D7D,EAAO5C,kBAEd,yBAAKD,UAAU,iCAAiC2G,KAAK,SAClD9D,EAAO5C,mBAKZ,yBAAKD,UAAY,+BAA+B2G,KAAO,SAAvD,kCAIK,kBAAC,GAAD,CAASX,mBAAoBrC,IAI3BiD,CA1BI7G,KAAKoB,MAAf0B,OA0B6Bc,GAIlC,yBAAK3D,UAAU,aACb,kBAAC,IAAD,CAAMI,GAAE,0BAAqBR,GAAMI,UAAU,wBAC3C,uBAAGA,UAAU,sBAAb,yBAEF,6BACA,6BAECyG,O,GA3DkBlG,aA8EZC,gBAPS,SAAAW,GAAK,MACzB,CACE8C,QAAQ9C,EAAM8C,QACdpB,OAAO1B,EAAM0B,UAIqB,CAAC2D,WFhEf,SAAAlB,GAAU,8CAAI,WAAMrG,GAAN,eAAAC,EAAA,+EAEfC,IAAMiC,IAAN,uBAA0BkE,IAFX,OAE3BjE,EAF2B,OAGjCpC,EAAS,CACLK,KhBlBgB,cgBmBhBC,QAAS8B,EAAI5B,OALgB,gDAQjCR,EAAS,CACPK,KhB9BiB,agB+BjBC,QAAS,KAAIC,SAASC,OAVS,yDAAJ,wDEgErBe,CAAuC+F,IC9EhDM,G,YAEJ,WAAYhH,GAAQ,IAAD,0BAIRD,GAFP,4CAAMC,KAEYA,MAAMmF,MAAMC,OAAvBrF,GAJQ,OAMf,EAAKuB,MAAM,CACTyE,QAAS,GACTC,mBAAoB,GACpBS,OAAQ,GACRX,SAAU,EACVmB,QAAS,GACT7G,kBAAmBL,EACnBiD,OAAQ,IAEV,EAAKC,SAAS,EAAKA,SAASxC,KAAd,gBACd,EAAKyC,SAAS,EAAKA,SAASzC,KAAd,gBAhBC,E,uFAmBO0C,GACnBA,EAAUH,QACT9C,KAAKkD,SAAS,CAACJ,OAAQG,EAAUH,W,+BAKhCK,GACPnD,KAAKkD,SAAL,eAAgBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAIlCH,GACPA,EAAEI,iBACF,IAAMyD,EAAQ,CACVnB,QAAS7F,KAAKoB,MAAMyE,QACpBC,mBAAoB9F,KAAKoB,MAAM0E,mBAC/BS,OAAQvG,KAAKoB,MAAMmF,OACnBX,SAAU5F,KAAKoB,MAAMwE,SACrBmB,QAAS/G,KAAKoB,MAAM2F,SAExBE,QAAQC,IAAIF,GACZhH,KAAKF,MAAMqH,eAAenH,KAAKoB,MAAMlB,kBAAkB8G,EAAQhH,KAAKF,MAAMb,W,+BAGlE,IACAY,EAAOG,KAAKF,MAAMmF,MAAMC,OAAxBrF,GACAiD,EAAU9C,KAAKoB,MAAf0B,OAER,OACE,yBAAK7C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMI,GAAE,wBAAmBR,GAAMI,UAAU,iBAA3C,yBAGA,wBAAIA,UAAU,yBAAd,oBACA,uBAAGA,UAAU,oBAAb,+BACA,0BAAM+C,SAAUhD,KAAKgD,UACnB,yBAAK/C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWwD,IAAW,+BAA+B,CACnD,aAAcX,EAAO+C,UAEvBxC,KAAK,UACLK,YAAY,uBACZJ,MAAOtD,KAAKoB,MAAMyE,QAClB9C,SAAU/C,KAAK+C,WAEhBD,EAAO+C,SACN,yBAAK5F,UAAU,oBAAoB6C,EAAO+C,UAG9C,yBAAK5F,UAAU,cACb,8BACEA,UAAU,+BACVyD,YAAY,sBACZL,KAAK,qBACLC,MAAOtD,KAAKoB,MAAM0E,mBAClB/C,SAAU/C,KAAK+C,YAGnB,wCACA,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVoD,KAAK,UACLC,MAAOtD,KAAKoB,MAAM2F,QAClBhE,SAAU/C,KAAK+C,YAGnB,yBAAK9C,UAAU,cACb,4BACEA,UAAU,+BACVoD,KAAK,WACLC,MAAOtD,KAAKoB,MAAMwE,SAClB7C,SAAU/C,KAAK+C,UAEf,4BAAQO,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIJ,yBAAKrD,UAAU,cACb,4BACEA,UAAU,+BACVoD,KAAK,SACLC,MAAOtD,KAAKoB,MAAMmF,OAClBxD,SAAU/C,KAAK+C,UAEf,4BAAQO,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIJ,2BACE/D,KAAK,SACLU,UAAU,4C,GA7HCO,aAiJdC,gBAJS,SAAAW,GAAK,MAAK,CAC9B0B,OAAQ1B,EAAM0B,UAGqB,CAACqE,eHpJV,SAAC5B,EAAY1B,EAAa5E,GAA1B,8CAAsC,WAAMC,GAAN,SAAAC,EAAA,+EAE1DC,IAAMC,KAAN,uBAA2BkG,GAAc1B,GAFiB,OAGhE5E,EAAQK,KAAR,wBAA8BiG,IAC9BrG,EAAS,CACPK,KhBToB,agBUpBC,QAAS,KANqD,gDAShEN,EAAS,CACLK,KhBdkB,agBelBC,QAAQ,KAAIC,SAASC,OAXuC,yDAAtC,wDGoJfe,CAA0CqG,ICjJnDM,G,YAEJ,aAAe,IAAD,8BACZ,+CACKhG,MAAM,CACTvB,GAAI,GACJsE,gBAAiB,GACjB0B,QAAS,GACTC,mBAAoB,GACpBS,OAAQ,GACRX,SAAU,GACVmB,QAAS,KACT7G,kBAAmB,GACnBmH,UAAW,GACXvE,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASxC,KAAd,gBAChB,EAAKyC,SAAS,EAAKA,SAASzC,KAAd,gBAfF,E,sEAkBL4C,GACPnD,KAAKkD,SAAL,eAAgBC,EAAEC,OAAOC,KAAQF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBAEF,IAAM6D,EAAoB,CACxBvH,GAAIG,KAAKoB,MAAMvB,GACfsE,gBAAiBnE,KAAKoB,MAAM+C,gBAC5B0B,QAAS7F,KAAKoB,MAAMyE,QACpBC,mBAAoB9F,KAAKoB,MAAM0E,mBAC/BS,OAAQvG,KAAKoB,MAAMmF,OACnBX,SAAU5F,KAAKoB,MAAMwE,SACrBmB,QAAS/G,KAAKoB,MAAM2F,QACpB7G,kBAAmBF,KAAKoB,MAAMlB,kBAC9BmH,UAAWrH,KAAKoB,MAAMiG,WAIxBrH,KAAKF,MAAMwH,kBAAkBtH,KAAKoB,MAAMlB,kBAAmBF,KAAKoB,MAAM+C,gBAAiBiD,EAAmBpH,KAAKF,MAAMb,W,0CAGlG,IAAD,EACYe,KAAKF,MAAMmF,MAAMC,OAAvCK,EADU,EACVA,WAAYC,EADF,EACEA,MACpBxF,KAAKF,MAAMyH,eAAehC,EAAYC,EAAOxF,KAAKF,MAAMb,W,gDAGhCgE,GAEpBA,EAAUH,QACZ9C,KAAKkD,SAAS,CAACJ,OAAQG,EAAUH,SAHA,MAgB/BG,EAAUY,aATZhE,EAPiC,EAOjCA,GACAsE,EARiC,EAQjCA,gBACA0B,EATiC,EASjCA,QACAC,EAViC,EAUjCA,mBACAS,EAXiC,EAWjCA,OACAX,EAZiC,EAYjCA,SACAmB,EAbiC,EAajCA,QACA7G,EAdiC,EAcjCA,kBACAmH,EAfiC,EAejCA,UAGFrH,KAAKkD,SAAS,CACZrD,KACAsE,kBACA0B,UACAC,qBACAS,SACAX,WACAmB,UACA7G,oBACAmH,gB,+BAIM,IACDvE,EAAU9C,KAAKoB,MAAf0B,OAKP,OACE,yBAAK7C,UAAU,WACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMI,GAAE,wBAAqBL,KAAKoB,MAAMlB,mBAAqBD,UAAU,iBAAvE,yBAGA,wBAAIA,UAAU,yBAAd,uBACA,uBAAGA,UAAU,oBAAb,iBAA+CD,KAAKoB,MAAMlB,kBAA1D,uBAAiG,IAAKF,KAAKoB,MAAM+C,gBAAiB,IAAlI,KACA,0BAAMnB,SAAUhD,KAAKgD,UACnB,yBAAK/C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWwD,IAAW,+BAA+B,CACnD,aAAcX,EAAO+C,UAEvBxC,KAAK,UACLK,YAAY,uBACZJ,MAAOtD,KAAKoB,MAAMyE,QAClB9C,SAAU/C,KAAK+C,WAEhBD,EAAO+C,SACN,yBAAK5F,UAAU,oBAAoB6C,EAAO+C,QAA1C,MAKJ,yBAAK5F,UAAU,cACb,8BACEA,UAAU,+BACVyD,YAAY,sBACZL,KAAK,qBACLC,MAAOtD,KAAKoB,MAAM0E,mBAClB/C,SAAU/C,KAAK+C,YAGnB,wCACA,yBAAK9C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAU,+BACVoD,KAAK,UACLC,MAAOtD,KAAKoB,MAAM2F,QAClBhE,SAAU/C,KAAK+C,YAGnB,yBAAK9C,UAAU,cACb,4BACEA,UAAU,+BACVoD,KAAK,WACLC,MAAOtD,KAAKoB,MAAMwE,SAClB7C,SAAU/C,KAAK+C,UAEf,4BAAQO,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIJ,yBAAKrD,UAAU,cACb,4BACEA,UAAU,+BACVoD,KAAK,SACLC,MAAOtD,KAAKoB,MAAMmF,OAClBxD,SAAU/C,KAAK+C,UAEf,4BAAQO,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIJ,2BACE/D,KAAK,SACLU,UAAU,4C,GAlKIO,aAyLjBC,gBALS,SAAAW,GAAK,MAAK,CAChCyC,aAAczC,EAAM8C,QAAQL,aAC5Bf,OAAQ1B,EAAM0B,UAKd,CAAEyE,eJ9J0B,SAAChC,EAAYC,EAAOvG,GAApB,8CAAgC,WAAMC,GAAN,eAAAC,EAAA,+EAEvCC,IAAMiC,IAAN,uBAA0BkE,EAA1B,YAAwCC,IAFD,OAEnDlE,EAFmD,OAGzDpC,EAAS,CACPK,KhBhCyB,mBgBiCzBC,QAAS8B,EAAI5B,OAL0C,gDAQzDT,EAAQK,KAAK,cAR4C,yDAAhC,uDI8JVgI,kBJlJa,SAAC/B,EAAYC,EAAO3B,EAAc5E,GAAlC,8CAA8C,WAAMC,GAAN,SAAAC,EAAA,+EAEpEC,IAAMoI,MAAN,uBAA4BjC,EAA5B,YAA0CC,GAAS3B,GAFiB,OAG1E5E,EAAQK,KAAR,wBAA8BiG,IAC9BrG,EAAS,CACPK,KhBrDmB,agBsDnBC,QAAS,KAN+D,gDAS1EN,EAAS,CACPK,KhB1DmB,agB2DnBC,QAAS,KAAIC,SAASC,OAXkD,yDAA9C,wDIgJlBe,CAGb2G,IC9LIK,G,4LAEEzH,KAAKF,MAAMqC,SAASC,YACtBpC,KAAKF,MAAMb,QAAQK,KAAK,gB,+BAI1B,OACE,yBAAKW,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,oCAGA,uBAAGA,UAAU,QAAb,iEAGA,6BACA,kBAAC,IAAD,CAAMA,UAAU,8BAA8BI,GAAG,aAAjD,WAGA,kBAAC,IAAD,CAAMJ,UAAU,gCAAgCI,GAAG,UAAnD,kB,GAvBMG,aAyCPC,gBAHS,SAAAW,GAAK,MAAK,CAChCe,SAAUf,EAAMe,YAEH1B,CAAyBgH,ICxClCC,G,YACJ,aAAe,IAAD,8BACZ,+CAEKtG,MAAQ,CACXuG,SAAU,GACVC,SAAU,GACVC,SAAU,GACVC,gBAAiB,GACjBhF,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASxC,KAAd,gBAChB,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAXJ,E,iFAeRP,KAAKF,MAAMqC,SAASC,YACtBpC,KAAKF,MAAMb,QAAQK,KAAK,gB,gDAIF2D,GACpBA,EAAUH,QACZ9C,KAAKkD,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACPA,EAAEI,iBACF,IAAMwE,EAAU,CACdJ,SAAU3H,KAAKoB,MAAMuG,SACrBC,SAAU5H,KAAKoB,MAAMwG,SACrBC,SAAU7H,KAAKoB,MAAMyG,SACrBC,gBAAiB9H,KAAKoB,MAAM0G,iBAG9B9H,KAAKF,MAAMkI,cAAcD,EAAS/H,KAAKF,MAAMb,W,+BAGtCkE,GACPnD,KAAKkD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGlC,IACAR,EAAW9C,KAAKoB,MAAhB0B,OACR,OACE,yBAAK7C,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,uBACA,0BAAM+C,SAAUhD,KAAKgD,UACnB,yBAAK/C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAO8E,WAEvBlE,YAAY,YACZL,KAAK,WACLC,MAAOtD,KAAKoB,MAAMwG,SAClB7E,SAAU/C,KAAK+C,WAEhBD,EAAO8E,UACN,yBAAK3H,UAAU,oBAAoB6C,EAAO8E,WAG9C,yBAAK3H,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAO6E,WAEvBjE,YAAY,2BACZL,KAAK,WACLC,MAAOtD,KAAKoB,MAAMuG,SAClB5E,SAAU/C,KAAK+C,WAEhBD,EAAO6E,UACN,yBAAK1H,UAAU,oBAAoB6C,EAAO6E,WAG9C,yBAAK1H,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAO+E,WAEvBnE,YAAY,WACZL,KAAK,WACLC,MAAOtD,KAAKoB,MAAMyG,SAClB9E,SAAU/C,KAAK+C,WAEhBD,EAAO+E,UACN,yBAAK5H,UAAU,oBAAoB6C,EAAO+E,WAG9C,yBAAK5H,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAOgF,kBAEvBpE,YAAY,mBACZL,KAAK,kBACLC,MAAOtD,KAAKoB,MAAM0G,gBAClB/E,SAAU/C,KAAK+C,WAEhBD,EAAOgF,iBACN,yBAAK7H,UAAU,oBACZ6C,EAAOgF,kBAId,2BAAOvI,KAAK,SAASU,UAAU,yC,GAnHxBO,aAuIRC,gBAJS,SAAAW,GAAK,MAAK,CAChC0B,OAAQ1B,EAAM0B,OACdX,SAAUf,EAAMe,YAIhB,CAAE6F,cjB1IyB,SAACD,EAAS9I,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAEzCC,IAAMC,KAAK,sBAAuB0I,GAFO,OAG/C9I,EAAQK,KAAK,UACbJ,EAAS,CACPK,KLVoB,aKWpBC,QAAS,KANoC,gDAS/CN,EAAS,CACPK,KLfoB,aKgBpBC,QAAS,KAAIC,SAASC,OAXuB,yDAAtB,wDiBwIde,CAGbiH,IC1IIO,G,YACJ,aAAe,IAAD,8BACZ,+CACK7G,MAAQ,CACXuG,SAAU,GACVE,SAAU,GACV/E,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASxC,KAAd,gBAChB,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBARJ,E,iFAYRP,KAAKF,MAAMqC,SAASC,YACtBpC,KAAKF,MAAMb,QAAQK,KAAK,gB,gDAIF2D,GACpBA,EAAUd,SAASC,YACrBpC,KAAKF,MAAMb,QAAQK,KAAK,cAEtB2D,EAAUH,QACZ9C,KAAKkD,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACPA,EAAEI,iBACF,IAAM2E,EAAe,CACnBP,SAAU3H,KAAKoB,MAAMuG,SACrBE,SAAU7H,KAAKoB,MAAMyG,UAGvB7H,KAAKF,MAAMqI,MAAMD,K,+BAGV/E,GACPnD,KAAKkD,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGlC,IACAR,EAAW9C,KAAKoB,MAAhB0B,OACR,OACE,yBAAK7C,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,UACA,0BAAM+C,SAAUhD,KAAKgD,UACnB,yBAAK/C,UAAU,cACb,2BACEV,KAAK,OACLU,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAO6E,WAEvBjE,YAAY,gBACZL,KAAK,WACLC,MAAOtD,KAAKoB,MAAMuG,SAClB5E,SAAU/C,KAAK+C,WAEhBD,EAAO6E,UACR,yBAAK1H,UAAU,oBAAoB6C,EAAO6E,WAG5C,yBAAK1H,UAAU,cACb,2BACEV,KAAK,WACLU,UAAWwD,IAAW,+BAAgC,CACpD,aAAcX,EAAO+E,WAEvBnE,YAAY,WACZL,KAAK,WACLC,MAAOtD,KAAKoB,MAAMyG,SAClB9E,SAAU/C,KAAK+C,WAEfD,EAAO+E,UACP,yBAAK5H,UAAU,oBAAoB6C,EAAO+E,WAG9C,2BAAOtI,KAAK,SAASU,UAAU,yC,GAhF3BO,aAqGLC,gBALS,SAAAW,GAAK,MAAK,CAChCe,SAAUf,EAAMe,SAChBW,OAAQ1B,EAAM0B,UAKd,CAAEqF,MlBxFiB,SAAAD,GAAY,8CAAI,WAAMhJ,GAAN,mBAAAC,EAAA,+EAGfC,IAAMC,KAAK,mBAAoB6I,GAHhB,OAG3B5G,EAH2B,OAKzBE,EAAUF,EAAI5B,KAAd8B,MAERK,aAAauG,QAAQ,WAAY5G,GAEjCD,EAAYC,GAEN6G,EAAUC,IAAW9G,GAE3BtC,EAAS,CACPK,KLxB0B,mBKyB1BC,QAAS6I,IAfsB,kDAkBjCnJ,EAAS,CACPK,KLxCoB,aKyCpBC,QAAS,KAAIC,SAASC,OApBS,0DAAJ,wDkBsFlBe,CAGbwH,I,SCpFaxH,gBAJS,SAAAW,GAAK,MAAK,CAChCe,SAAUf,EAAMe,YAGH1B,EArBM,SAAC,GAAD,IAAcD,EAAd,EAAG+H,UAAsBpG,EAAzB,EAAyBA,SAAaqG,EAAtC,gDACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA3I,GAAK,OACa,IAAxBqC,EAASC,WACP,kBAAC5B,EAAcV,GAEf,kBAAC,IAAD,CAAUO,GAAG,kBCUfqI,GAAW7G,aAAa6G,SAE9B,GAAIA,GAAU,CACZnH,EAAYmH,IACZ,IAAMC,GAAmBL,IAAWI,IACpClE,GAAMtF,SAAS,CACbK,KzBjB4B,mByBkB5BC,QAASmJ,KAGX,IAAMC,GAAcC,KAAKC,MAAQ,IAC7BH,GAAiBI,IAAMH,KAGzBpE,GAAMtF,SAAS0C,KACflB,OAAOsB,SAASC,KAAO,K,IA6CZ+G,G,iLAvCX,OACE,kBAAC,IAAD,CAAUxE,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAKvE,UAAU,OACb,kBAAC,EAAD,MAKA,kBAAC,IAAD,CAAOgJ,OAAK,EAACC,KAAK,IAAIX,UAAWd,KACjC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,YAAYX,UAAWb,KACzC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASX,UAAWN,KAKtC,kBAAC,IAAD,KACA,kBAAC,GAAD,CAAcgB,OAAK,EAACC,KAAK,aAAaX,UAAWxH,IACjD,kBAAC,GAAD,CAAckI,OAAK,EAACC,KAAK,cAAcX,UAAW5F,IAClD,kBAAC,GAAD,CAAcsG,OAAK,EAACC,KAAK,qBAAqBX,UAAWvD,KACzD,kBAAC,GAAD,CAAciE,OAAK,EAACC,KAAK,oBAAoBX,UAAW/B,KACxD,kBAAC,GAAD,CACEyC,OAAK,EACLC,KAAK,sBACLX,UAAWzB,KAEb,kBAAC,GAAD,CACEmC,OAAK,EACLC,KAAK,wCACLX,UAAWnB,a,GA/BP5G,aC7BE2I,QACW,cAA7BzI,OAAOsB,SAASoH,UAEe,UAA7B1I,OAAOsB,SAASoH,UAEhB1I,OAAOsB,SAASoH,SAASnE,MACvB,2DCZNoE,IAASZ,OAAO,kBAAC,GAAD,MAASa,SAASC,eAAe,SD2H3C,kBAAmB9E,WACrBA,UAAU+E,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0d120f46.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\r\n\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n       //const res = await axios.post(\"http://localhost:8088/api/project\", project); omoguceno proxy package.json\r\n       /*const res = */await axios.post(\"/api/project\", project);\r\n       history.push(\"/dashboard\");//da ga vrati na dashboard\r\n       dispatch({\r\n        type: GET_ERRORS,\r\n        payload:{}//brise greske is state-a\r\n    });\r\n    } catch(err) {\r\n         dispatch({\r\n             type: GET_ERRORS,\r\n             payload:err.response.data\r\n         });\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n   //const res = await axios.get(\"http://localhost:8088/api/project/all\")\r\n   const res = await axios.get(\"/api/project/all\")\r\n   dispatch ({\r\n      type: GET_PROJECTS,\r\n      payload: res.data  \r\n   });\r\n\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try {\r\n        //const res = await axios.get(`http://localhost:8088/api/project/${id}`);\r\n        const res = await axios.get(`/api/project/${id}`);\r\n        dispatch ( {\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        history.push(\"/dashboard\");\r\n    }   \r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    if (\r\n        window.confirm(\r\n        \"Are you sure? This will delete the project and all the data related to it\"\r\n        )\r\n    ) {\r\n        await axios.delete(`/api/project/${id}`);\r\n        dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n        });\r\n    }\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProject} from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n  render() {\r\n    const {project} = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}> \r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n            \r\n                  <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this,project.projectIdentifier)}>\r\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                  </li>\r\n              \r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{deleteProject})(ProjectItem);\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateProjectButton;","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport {connect} from 'react-redux';\r\nimport {getProjects} from '../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n\r\n    // const projectObject = {\r\n    //   projectName: \"ProjectName PROPS\",\r\n    //   projectIdentifier: \"PROP\",\r\n    //   description: \"description from PROPS\"\r\n    // };\r\n\r\n    const {projects} = this.props.project;\r\n\r\n    return (\r\n\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n               <CreateProjectButton/>\r\n              <br />\r\n              <hr />\r\n              {/* <ProjectItem project={projectObject}/> */}\r\n              {projects.map(project=>(\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))\r\n\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  project : PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project:state.project\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProjects})(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullname}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../actions/projectActions';\r\nimport classnames from \"classnames\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n     if(nextProps.errors) {\r\n         this.setState({errors: nextProps.errors});\r\n     }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject,this.props.history);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const {errors} = this.state; \r\n    return (\r\n      <div>\r\n        {\r\n          //check name attribute input fields\r\n          //create constructor\r\n          //set state\r\n          //set value on input fields\r\n          //create onChange function\r\n          //set onChange on each input field\r\n          //bind on constructor\r\n          //check state change in the react extension\r\n        }  \r\n\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      //className=\"form-control form-control-lg\"\r\n                      className={classnames(\"form-control form-control-lg\",{\"is-invalid\": errors.projectName})}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                         {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                   \r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                     {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                         {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                         {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nAddProject.propTypes = {\r\n    createProject : PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors : state.errors\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {createProject}) (AddProject);","import {GET_ERRORS} from '../actions/types';\r\nconst initialState = {};\r\nexport default function(state=initialState, action) {\r\n  switch(action.type) {\r\n      case GET_ERRORS:\r\n          return action.payload;\r\n      default:\r\n          return state;\r\n  }\r\n\r\n}","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from '../actions/types';\r\n\r\nconst initialState = {\r\n    projects : [],\r\n    project : {}\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n    switch(action.type) {\r\n       case GET_PROJECTS:\r\n           return {\r\n               ...state,\r\n               projects:action.payload\r\n           };\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project:action.payload\r\n            };\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects:state.projects.filter(\r\n                    project => project.projectIdentifier !== action.payload\r\n                )\r\n            };\r\n        default:\r\n               return state;\r\n       \r\n       \r\n    }\r\n}","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks : [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function(state=initialState,action) {\r\n    switch(action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            };\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(\r\n                project_task => project_task.projectSequence !== action.payload\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n    errors:errorReducer,\r\n    project:projectReducer,\r\n    backlog:backlogReducer,\r\n    security: securityReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n          //  window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n          //  window.__REDUX_DEVTOOLS_EXTENSION__()\r\n          ReactReduxDevTools\r\n        )\r\n    );\r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware))   \r\n    );\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport {getProject, createProject} from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass UpdateProject extends Component {\r\n   //prikaz vrednosti iz baze na poljima na formi\r\n   constructor() {\r\n     super();\r\n\r\n     this.state={\r\n       id:\"\",\r\n       projectName:\"\",\r\n       projectIdentifier:\"\",\r\n       description:\"\",\r\n       start_date:\"\",\r\n       end_date:\"\",\r\n       errors: {}\r\n     };\r\n     this.onChange=this.onChange.bind(this);\r\n     this.onSubmit=this.onSubmit.bind(this);\r\n   }\r\n  //end prikaz\r\n\r\n  componentWillReceiveProps(nextProps) {//next props dobija kada se promeni stanje u Redux-u\r\n    if (nextProps.errors) {\r\n      this.setState({errors:nextProps.errors});\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n   componentDidMount() {\r\n     const {id} = this.props.match.params;\r\n     this.props.getProject(id, this.props.history);//ovde se poziva API popunjava props ali se ne prikazuje na formi nista\r\n   }\r\n\r\n  onChange(e) {\r\n    this.setState({[e.target.name]:e.target.value});\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject={\r\n      id:this.state.id,\r\n      projectName:this.state.projectName,\r\n      projectIdentifier:this.state.projectIdentifier,\r\n      description:this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject,this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\":errors.projectName\r\n                   })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"//za prikaz vrednosti iz baze\r\n                    value={this.state.projectName}//za prikaz vrednosti iz baze\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes =  {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject:PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   project:state.project.project,\r\n   errors:state.errors\r\n });\r\n\r\nexport default connect(mapStateToProps,{getProject, createProject})(UpdateProject);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button className=\"btn btn-danger ml-4\" onClick= {this.onDeleteClick.bind(\r\n            this,\r\n            project_task.projectIdentifier,\r\n            project_task.projectSequence)}> Delete</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {  \r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(null, {deleteProjectTask}) (ProjectTask);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\nimport { bindActionCreators } from \"../../../../../../Users/drago/AppData/Local/Microsoft/TypeScript/3.6/node_modules/redux\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task,history) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type:GET_ERRORS,\r\n      payload: {}  \r\n    });\r\n  } catch(err) {\r\n    dispatch({\r\n        type:GET_ERRORS,\r\n        payload:err.response.data\r\n    });\r\n  }\r\n   \r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch =>  {\r\n    try {\r\n       const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n       dispatch({\r\n           type:GET_BACKLOG,\r\n           payload: res.data\r\n       });\r\n    } catch(err) {\r\n       dispatch({\r\n         type: GET_ERRORS,\r\n         payload: err.response.data\r\n       });\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n   try{\r\n     const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n     dispatch({\r\n       type: GET_PROJECT_TASK,\r\n       payload: res.data\r\n     });\r\n   } catch (err) {\r\n     history.push(\"/dashboard\");\r\n   }\r\n}\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n  try {\r\n     await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n     history.push(`/projectBoard/${backlog_id}`);\r\n     dispatch({\r\n       type: GET_ERRORS,\r\n       payload: {}\r\n     });\r\n  } catch(err) {\r\n     dispatch({\r\n       type:GET_ERRORS,\r\n       payload: err.response.data\r\n     });\r\n  }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone.`)) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport ProjectTask from \"../ProjectBoard/ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n\r\n        const {project_tasks_prop} = this.props;\r\n        \r\n        const tasks=project_tasks_prop.map(project_task =>(\r\n          <ProjectTask key={project_task.id} project_task={project_task}/>\r\n        ));\r\n\r\n        let toDoItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for(let i=0; i<tasks.length; i++) {\r\n          //console.log(tasks[i]);\r\n          if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n            toDoItems.push(tasks[i]);\r\n          }\r\n          if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n            inProgressItems.push(tasks[i]);\r\n          }\r\n          if (tasks[i].props.project_task.status === \"DONE\") {\r\n            doneItems.push(tasks[i]);\r\n          }\r\n         \r\n        }\r\n\r\n        return(\r\n            /*{\r\n                // <!-- Backlog STARTS HERE -->\r\n              }*/\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                      <div className=\"card-header bg-secondary text-white\">\r\n                        <h3>TO DO</h3>\r\n                      </div>\r\n                    </div>\r\n                    {/* {tasks} */}\r\n                    {toDoItems}\r\n                    {\r\n                      //insert tasks here\r\n                    }\r\n                    {/* <ProjectTask/> */}\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                      <div className=\"card-header bg-primary text-white\">\r\n                        <h3>In Progress</h3>\r\n                      </div>\r\n                    </div>\r\n                    {\r\n                      //  <!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n                      //         <!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n                    }\r\n                    {inProgressItems}\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                      <div className=\"card-header bg-success text-white\">\r\n                        <h3>Done</h3>\r\n                      </div>\r\n                    </div>\r\n                    {\r\n                      // <!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n                      // <!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n                    }\r\n                    {doneItems}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getBacklog} from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n//constructor to handle errors\r\nconstructor() {\r\n  super();\r\n  this.state = {\r\n    errors: {}\r\n  };\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n  if (nextProps.errors) {\r\n    this.setState({errors: nextProps.errors});\r\n  }\r\n}\r\n\r\ncomponentDidMount() {\r\n    const {id} = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n}\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const {project_tasks} = this.props.backlog;\r\n    const {errors} = this.state;\r\n\r\n    let BoardContent;\r\n    const boardAlgorithm = (errors,project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n          <div className=\"alert alert-danger text-center\" role= \"alert\">{errors.projectNotFound}</div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n          <div className = \"alert alert-info text-center\" role = \"alert\">No Project Tasks on this board</div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks}/>;\r\n      }\r\n    };\r\n\r\n    BoardContent=boardAlgorithm(errors, project_tasks);\r\n   \r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {/* <Backlog project_tasks_prop={project_tasks} /> */}\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog:PropTypes.object.isRequired,\r\n    getBacklog:PropTypes.func.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n      backlog:state.backlog,\r\n      errors:state.errors\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {addProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n  constructor(props) {\r\n\r\n      super(props);\r\n\r\n      const {id} = this.props.match.params;\r\n\r\n      this.state={\r\n        summary: \"\",\r\n        acceptanceCriteria: \"\",\r\n        status: \"\",\r\n        priority: 0,\r\n        dueDate: \"\",\r\n        projectIdentifier: id,\r\n        errors: {}\r\n      }\r\n      this.onChange=this.onChange.bind(this);\r\n      this.onSubmit=this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      if(nextProps.errors) {\r\n          this.setState({errors: nextProps.errors});\r\n      }\r\n  }\r\n\r\n  //on change\r\n  onChange(e) {\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTask={\r\n        summary: this.state.summary,\r\n        acceptanceCriteria: this.state.acceptanceCriteria,\r\n        status: this.state.status,\r\n        priority: this.state.priority,\r\n        dueDate: this.state.dueDate\r\n    };\r\n    console.log(newTask);\r\n    this.props.addProjectTask(this.state.projectIdentifier,newTask,this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors }= this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\",{\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes={\r\n  addProjectTask:PropTypes.func.isRequired,\r\n  errors:PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps,{addProjectTask})(AddProjectTask);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state={\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: null,\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: \"\"\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit=this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({[e.target.name] : e.target.value});\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    }\r\n\r\n    //console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, UpdateProjectTask, this.props.history);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({errors: nextProps.errors});\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    //console.log(this.state.projectIdentifier);\r\n    //console.log(this.state.projectSequence);\r\n    //console.log(this.state.errors);\r\n    //console.log(errors);\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to = {`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} + Project Task ID: {\" \"}{this.state.projectSequence}{\" \"} </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\",{\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary} </div>\r\n                  )\r\n\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask}\r\n)(UpdateProjectTask);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");//ako si ulogovan i pozoves Landing page (http://localhost:3000/ klik na Personal PM Tool) da te baci na Dashboard a ne treba da te baci na Signup Login na Landing page-u\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes= {\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");//ako si ulogovan i pozoves Register page (http://localhost:3000/register) da te baci na Dashboard a ne treba da te baci na Register page\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");//ako si ulogovan i pozoves Login page (http://localhost:3000/login) da te baci na Dashboard a ne treba da te baci na Login page\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                  <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                   {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    //handle logout\n    //window.location.href = \"/\";\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}